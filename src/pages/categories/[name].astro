---
import Layout from "@layouts/Layout.astro"
import Header from "@partials/Header.vue"
import CommunitiesSection from "@partials/CommunitiesSection.vue"
import Footer from "@partials/Footer.vue"
import { connectPB, PollDetails, CommunityDetails } from "@utils/index"

const { name } = Astro.params;

const loadPolls = async () => {
	const pb = connectPB()
	const result = await pb.collection("polls").getFullList(0, {
		// Filter all polls that have no pollId assigned to them
		filter: "pollId != 0",
		// In desc order
		sort: "-created",
		expand: "image,community",
	})
	return result.map((val) => new PollDetails(val))
}
const loadCommunities = async (polls: PollDetails[]) => {
	const pb = connectPB()
	const result = await pb.collection("communities").getFullList(0, {
		filter: `isUser = false && category.name="${name}"`,
		sort: "-created",
		expand: "category",
	})
	return result.map((val) => {
		const com = new CommunityDetails(val)
		const count = polls.reduce((a, b) => b.community.name === com.name ? 1 + a : a, 0)
		com.pollCount = count
		return com
	})
}
const polls = await loadPolls().catch(() => {})
if (!polls) {
	return Astro.redirect("/404")
}
const communities = await loadCommunities(polls)
---

<Layout
	title="Faterium Category"
	description="Faterium Decentralized Application to work with Faterium Network."
	coverUrl="https://dapp.faterium.com/preview.png"
>
	<Header client:only />
	<CommunitiesSection client:load category={name} marginTop={true} communities={communities} />
	<Footer />
</Layout>
